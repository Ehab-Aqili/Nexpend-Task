{"ast":null,"code":"import React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'top'\n    },\n    title: {\n      display: true,\n      text: 'Chart.js Bar Chart'\n    }\n  }\n};\nconst labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\nconst arr = [100, 200, 300, 400, 500, 600, 700];\nconst DataChart = () => {\n  const data = {\n    labels,\n    datasets: [{\n      label: 'Dataset 1',\n      data: labels.map(() => arr.datatype.number({\n        min: 0,\n        max: 1000\n      })),\n      backgroundColor: 'rgba(255, 99, 132, 0.5)'\n    }]\n  };\n  return /*#__PURE__*/React.createElement(Bar, {\n    options: options,\n    data: data\n  });\n};\n_c = DataChart;\nexport default DataChart;\nvar _c;\n$RefreshReg$(_c, \"DataChart\");","map":{"version":3,"names":["React","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","register","options","responsive","plugins","legend","position","title","display","text","labels","arr","DataChart","data","datasets","label","map","datatype","number","min","max","backgroundColor","createElement","_c","$RefreshReg$"],"sources":["C:/Users/Orange/Desktop/Nixpend/frontend/src/components/Chats/DataChart.js"],"sourcesContent":["import React from 'react'\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n  } from 'chart.js';\r\n  import { Bar } from 'react-chartjs-2';\r\n  \r\n  ChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n  );\r\n  \r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Chart.js Bar Chart',\r\n      },\r\n    },\r\n  };\r\n  \r\n  const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\r\n  \r\nconst arr = [100, 200, 300, 400, 500, 600, 700]\r\nconst DataChart = () => {\r\n    const data = {\r\n        labels,\r\n        datasets: [\r\n          {\r\n            label: 'Dataset 1',\r\n            data: labels.map(() => arr.datatype.number({ min: 0, max: 1000 })),\r\n            backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n          },\r\n          \r\n        ],\r\n      };\r\n  return  React.createElement(Bar, { options: options, data: data });\r\n}\r\n\r\nexport default DataChart"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACIC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,SAASC,GAAG,QAAQ,iBAAiB;AAErCP,OAAO,CAACQ,QAAQ,CACdP,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,MAAMG,OAAO,GAAG;EACdC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE;IACPC,MAAM,EAAE;MACNC,QAAQ,EAAE;IACZ,CAAC;IACDC,KAAK,EAAE;MACLC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAED,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC;AAEjF,MAAMC,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AAC/C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACpB,MAAMC,IAAI,GAAG;IACTH,MAAM;IACNI,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,WAAW;MAClBF,IAAI,EAAEH,MAAM,CAACM,GAAG,CAAC,MAAML,GAAG,CAACM,QAAQ,CAACC,MAAM,CAAC;QAAEC,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAK,CAAC,CAAC,CAAC;MAClEC,eAAe,EAAE;IACnB,CAAC;EAGL,CAAC;EACL,oBAAQ9B,KAAK,CAAC+B,aAAa,CAACtB,GAAG,EAAE;IAAEE,OAAO,EAAEA,OAAO;IAAEW,IAAI,EAAEA;EAAK,CAAC,CAAC;AACpE,CAAC;AAAAU,EAAA,GAbKX,SAAS;AAef,eAAeA,SAAS;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
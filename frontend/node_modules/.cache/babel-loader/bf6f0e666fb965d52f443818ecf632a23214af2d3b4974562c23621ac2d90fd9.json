{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Orange\\\\Desktop\\\\Nixpend\\\\frontend\\\\src\\\\components\\\\Chats\\\\DataChart.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport { providerContext } from './../../Context/DataContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: \"top\"\n    },\n    title: {\n      display: true,\n      text: \"Chart.js Bar Chart\"\n    }\n  }\n};\nconst labels = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"];\nconst arr = [100, 200, 300];\nconst DataChart = () => {\n  _s();\n  const {\n    data,\n    cards\n  } = useContext(providerContext);\n\n  // console.log(data, \"sadasdsadas\", cards )\n  // console.log(\"dataName\", data[0])\n\n  const statusName = data.map(value => {\n    return value.name;\n  });\n  const columnName = statusName;\n  const filterCard = cards.filter(card => columnName.includes(card.status));\n\n  // console.log(filterCard)\n  // console.log(statusName)\n  const dataChart = {\n    labels: statusName,\n    datasets: [{\n      label: \"Dataset 1\",\n      data: arr,\n      backgroundColor: \"rgba(255, 99, 132, 0.5)\"\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-50\",\n      children: /*#__PURE__*/React.createElement(Bar, {\n        options: options,\n        data: dataChart\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(DataChart, \"YkEsRKwusq+7PXGd1sCuGFBp12g=\");\n_c = DataChart;\nexport default DataChart;\nvar _c;\n$RefreshReg$(_c, \"DataChart\");","map":{"version":3,"names":["React","useContext","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","providerContext","jsxDEV","_jsxDEV","Fragment","_Fragment","register","options","responsive","plugins","legend","position","title","display","text","labels","arr","DataChart","_s","data","cards","statusName","map","value","name","columnName","filterCard","filter","card","includes","status","dataChart","datasets","label","backgroundColor","children","className","createElement","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Orange/Desktop/Nixpend/frontend/src/components/Chats/DataChart.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { providerContext } from './../../Context/DataContext';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst options = {\r\n  responsive: true,\r\n  plugins: {\r\n    legend: {\r\n      position: \"top\",\r\n    },\r\n    title: {\r\n      display: true,\r\n      text: \"Chart.js Bar Chart\",\r\n    },\r\n  },\r\n};\r\n\r\nconst labels = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"];\r\n\r\nconst arr = [100, 200, 300];\r\nconst DataChart = () => {\r\n\r\n  const { data, cards } = useContext(providerContext);\r\n\r\n\r\n// console.log(data, \"sadasdsadas\", cards )\r\n// console.log(\"dataName\", data[0])\r\n\r\nconst statusName = data.map((value) => {\r\n    return value.name\r\n}) \r\n\r\nconst columnName = statusName;\r\nconst filterCard = cards.filter((card) => columnName.includes(card.status));\r\n\r\n// console.log(filterCard)\r\n// console.log(statusName)\r\n  const dataChart = {\r\n    labels: statusName,\r\n    datasets: [\r\n      {\r\n        label: \"Dataset 1\",\r\n        data: arr,\r\n        backgroundColor: \"rgba(255, 99, 132, 0.5)\",\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <>\r\n    <div className=\"w-50\">\r\n        {React.createElement(Bar, { options: options, data: dataChart })}\r\n    </div>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default DataChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,eAAe,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9DZ,OAAO,CAACa,QAAQ,CACdZ,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,MAAMQ,OAAO,GAAG;EACdC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE;IACPC,MAAM,EAAE;MACNC,QAAQ,EAAE;IACZ,CAAC;IACDC,KAAK,EAAE;MACLC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAED,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC;AAE/E,MAAMC,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AAC3B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEtB,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAG7B,UAAU,CAACU,eAAe,CAAC;;EAGrD;EACA;;EAEA,MAAMoB,UAAU,GAAGF,IAAI,CAACG,GAAG,CAAEC,KAAK,IAAK;IACnC,OAAOA,KAAK,CAACC,IAAI;EACrB,CAAC,CAAC;EAEF,MAAMC,UAAU,GAAGJ,UAAU;EAC7B,MAAMK,UAAU,GAAGN,KAAK,CAACO,MAAM,CAAEC,IAAI,IAAKH,UAAU,CAACI,QAAQ,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC;;EAE3E;EACA;EACE,MAAMC,SAAS,GAAG;IAChBhB,MAAM,EAAEM,UAAU;IAClBW,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,WAAW;MAClBd,IAAI,EAAEH,GAAG;MACTkB,eAAe,EAAE;IACnB,CAAC;EAEL,CAAC;EACD,oBACE/B,OAAA,CAAAE,SAAA;IAAA8B,QAAA,eACAhC,OAAA;MAAKiC,SAAS,EAAC,MAAM;MAAAD,QAAA,eAChB7C,KAAK,CAAC+C,aAAa,CAACrC,GAAG,EAAE;QAAEO,OAAO,EAAEA,OAAO;QAAEY,IAAI,EAAEY;MAAU,CAAC;IAAC;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D;EAAC,gBACJ,CAAC;AAEP,CAAC;AAACvB,EAAA,CAlCID,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AAoCf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}